<!--
RSS generated by JIRA (5.0.4#731-sha1:3aa7374293d111f571925889c44fdf45364dfd21) at Fri Jun 01 02:55:50 UTC 2012

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/sr/jira.issueviews:searchrequest-xml/temp/SearchRequest.xml?pid=12312520&status=5&status=6&resolution=1&type=1&type=2&type=3&type=4&type=5&type=6&sorter/field=fixVersions&sorter/order=DESC&sorter/field=issuetype&sorter/order=ASC&sorter/field=issuekey&sorter/order=DESC&tempMax=100&reset=true&decorator=none&field=key&field=summary
-->
<!-- If you wish to do custom client-side styling of RSS, uncomment this:
<?xml-stylesheet href="https://issues.apache.org/jira/styles/jiraxml2html.xsl" type="text/xsl"?>
-->
<rss version="0.92">
    <channel>
        <title>ASF JIRA</title>
        <link>https://issues.apache.org/jira/secure/IssueNavigator.jspa?reset=true&amp;jqlQuery=project+%3D+FUNCTOR+AND+issuetype+in+%28Bug%2C+%22New+Feature%22%2C+Task%2C+Improvement%2C+Wish%2C+Test%29+AND+resolution+%3D+Fixed+AND+status+in+%28Resolved%2C+Closed%29+ORDER+BY+fixVersion+DESC%2C+issuetype+ASC%2C+key+DESC</link>
        <description>An XML representation of a search request</description>
                <language>en-uk</language>
                        <issue start="0" end="11" total="11"/>
                <build-info>
            <version>5.0.4</version>
            <build-number>731</build-number>
            <build-date>06-05-2012</build-date>
        </build-info>
<item>
            <title>[FUNCTOR-10] throw NullPointerException for illegal null values</title>
                <link>https://issues.apache.org/jira/browse/FUNCTOR-10</link>
                <project id="12312520" key="FUNCTOR">Commons Functor</project>
                        <description>&lt;p&gt;for better alignment with JSE, &lt;tt&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;lang&amp;#93;&lt;/span&gt;&lt;/tt&gt;, etc.  Currently &lt;tt&gt;IllegalArgumentException&lt;/tt&gt; is thrown.&lt;br/&gt;
Per &lt;a href=&quot;http://markmail.org/message/ythw55yad5lrvqrj&quot;&gt;http://markmail.org/message/ythw55yad5lrvqrj&lt;/a&gt;&lt;/p&gt;</description>
                <environment></environment>
            <key id="12539247">FUNCTOR-10</key>
            <summary>throw NullPointerException for illegal null values</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/improvement.gif">Improvement</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priority_major.gif">Major</priority>
                    <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/status_resolved.gif">Resolved</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="mbenson">Matt Benson</assignee>
                                <reporter username="ebourg">Emmanuel Bourg</reporter>
                        <labels>
                    </labels>
                <created>Sat, 21 Jan 2012 02:53:10 +0000</created>
                <updated>Mon, 23 Jan 2012 21:25:51 +0000</updated>
                    <resolved>Mon, 23 Jan 2012 21:20:39 +0000</resolved>
                                                                    <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="13190530" author="mbenson" created="Sat, 21 Jan 2012 20:57:41 +0000"  >&lt;p&gt;using lang3 Validate.notNull + maven-shade-plugin&lt;/p&gt;</comment>
                    <comment id="13190803" author="ebourg" created="Sun, 22 Jan 2012 22:26:31 +0000"  >&lt;p&gt;Doesn&apos;t this create a risk that people will use the Validate class shaded into &lt;span class=&quot;error&quot;&gt;&amp;#91;functor&amp;#93;&lt;/span&gt;? Auto import in modern IDEs is not always smart &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    <comment id="13190889" author="mbenson" created="Mon, 23 Jan 2012 05:52:49 +0000"  >&lt;p&gt;Technically, yes, but should we avoid an available convenience in cases like this?&lt;/p&gt;</comment>
                    <comment id="13190940" author="ebourg" created="Mon, 23 Jan 2012 09:03:02 +0000"  >&lt;p&gt;I tend to think that convenience for the end user is more important than convenience for the developer. In this case the code saved by the Validate class is marginal, I would rather code the null check manually.&lt;/p&gt;</comment>
                    <comment id="13191119" author="simone.tripodi" created="Mon, 23 Jan 2012 11:30:50 +0000"  >&lt;p&gt;We could shade the &lt;tt&gt;Validate&lt;/tt&gt; class by renaming it in a way some IDEs (i.e. Eclipse) is not able to resolve; Google Guice&apos;s folks use to do it by shading the classes with &lt;tt&gt;$&lt;/tt&gt; as first class name char, it would look like: &lt;tt&gt;org.apache.commons.lang.$Validate&lt;/tt&gt;&lt;/p&gt;</comment>
                    <comment id="13191456" author="mbenson" created="Mon, 23 Jan 2012 21:14:34 +0000"  >&lt;p&gt;Thanks for the hint, Simo!  Naming e.g. &lt;tt&gt;org.apache.commons.lang3.Validate&lt;/tt&gt; to &lt;tt&gt;org.apache.commons.functor.&lt;em&gt;lang3.&lt;/em&gt;_Validate&lt;/tt&gt; and confirmed that the resulting jar is fully functional.&lt;/p&gt;</comment>
                    <comment id="13191462" author="simone.tripodi" created="Mon, 23 Jan 2012 21:20:19 +0000"  >&lt;p&gt;nice to hear the trick worked! The nicer thing is IMHO that names are still valid Java identifier parts, but not all IDEs are good on recognizing them &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/tongue.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Standard Eclipse, for example, doesn&apos;t resolve the Guice shaded internals, while Sonatype&apos;s MavenIDE (an Eclipse mod) does.&lt;/p&gt;</comment>
                    <comment id="13191463" author="mbenson" created="Mon, 23 Jan 2012 21:20:39 +0000"  >&lt;p&gt;Committed revision 1234990.&lt;/p&gt;</comment>
                    <comment id="13191468" author="mbenson" created="Mon, 23 Jan 2012 21:23:53 +0000"  >&lt;p&gt;Yes; I would imagine that the IDEs would be fine to import if a user actually tried referencing the classes by these (albeit lightly) obfuscated names, but why would the user do this?  We&apos;ve accomplished the goal of protecting the user from accidentally importing these.  It might be nice to make the relocator pluggable for the shade plugin, to make this easier, but I think at Commons we&apos;ve gone long enough reinventing the wheel in every component just to avoid dependencies.  Jar shading gives us the best of both worlds.&lt;/p&gt;</comment>
                    <comment id="13191473" author="mbenson" created="Mon, 23 Jan 2012 21:25:51 +0000"  >&lt;p&gt;hmm, that was actually supposed to be &lt;tt&gt;org.apache.commons.functor.&amp;#95;lang3.&amp;#95;&amp;#95;Validate&lt;/tt&gt;&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Sat, 21 Jan 2012 20:57:41 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>

<item>
            <title>[FUNCTOR-2] [functor] Improve Functor web page, removing Ant from building</title>
                <link>https://issues.apache.org/jira/browse/FUNCTOR-2</link>
                <project id="12312520" key="FUNCTOR">Commons Functor</project>
                        <description>&lt;p&gt;Hi all!&lt;/p&gt;

&lt;p&gt;The Functor homepage (in SVN trunk) for building the project is a bit out of date regarding maven and ant. I couldn&apos;t follow the maven instructions (it mentioned Maven 1 -g option, and non-existent ant build properties).&lt;/p&gt;

&lt;p&gt;I&apos;m also following the examples in the website, I will revise them during this weekend, but if someone thinks adding the examples of FUNCTOR- would be helpful, I could try helping. Could someone with karma please review if these changes are correct?&lt;/p&gt;

&lt;p&gt;BR,&lt;br/&gt;
Bruno&lt;/p&gt;</description>
                <environment>&lt;p&gt;Ubuntu 11.10&lt;br/&gt;
Firefox 4&lt;br/&gt;
Sun JDK 1.6&lt;/p&gt;</environment>
            <key id="12528348">FUNCTOR-2</key>
            <summary>[functor] Improve Functor web page, removing Ant from building</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/improvement.gif">Improvement</type>
                                <priority id="5" iconUrl="https://issues.apache.org/jira/images/icons/priority_trivial.gif">Trivial</priority>
                    <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/status_resolved.gif">Resolved</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="simone.tripodi">Simone Tripodi</assignee>
                                <reporter username="kinow">Bruno P. Kinoshita</reporter>
                        <labels>
                    </labels>
                <created>Sat, 22 Oct 2011 02:38:06 +0000</created>
                <updated>Sun, 23 Oct 2011 20:33:59 +0000</updated>
                    <resolved>Sun, 23 Oct 2011 15:54:33 +0000</resolved>
                                                                    <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="13133229" author="kinow" created="Sat, 22 Oct 2011 02:45:21 +0000"  >&lt;p&gt;Patches&lt;/p&gt;</comment>
                    <comment id="13133675" author="simone.tripodi" created="Sun, 23 Oct 2011 15:54:33 +0000"  >&lt;p&gt;Thanks for contributing Bruno, the patches have been applied!&lt;/p&gt;

&lt;p&gt;A recommendation for next patches you will submit: just provide a single patch file named with the issue key, i.e. {{&lt;a href=&quot;https://issues.apache.org/jira/browse/FUNCTOR-2&quot; title=&quot;[functor] Improve Functor web page, removing Ant from building&quot;&gt;&lt;del&gt;FUNCTOR-2&lt;/del&gt;&lt;/a&gt;.patch}} that would simplify the committer work.&lt;/p&gt;</comment>
                    <comment id="13133738" author="kinow" created="Sun, 23 Oct 2011 20:33:59 +0000"  >&lt;p&gt;Thanks for the heads up Simone! I&apos;ll follow your advice in the next patches &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12500280" name="building.patch" size="3379" author="kinow" created="Sat, 22 Oct 2011 02:45:21 +0000" />
                    <attachment id="12500281" name="examples.patch" size="3089" author="kinow" created="Sat, 22 Oct 2011 02:45:21 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Sun, 23 Oct 2011 15:54:33 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>

<item>
            <title>[FUNCTOR-5] Complete the javadoc description of Limit</title>
                <link>https://issues.apache.org/jira/browse/FUNCTOR-5</link>
                <project id="12312520" key="FUNCTOR">Commons Functor</project>
                        <description>&lt;p&gt;As pointed by Emmanuel, the class Limit&apos;s javadoc says: &lt;/p&gt;

&lt;p&gt;&quot;A predicate that returns true the first n times it is invoked.&quot;&lt;/p&gt;

&lt;p&gt;While Offset&apos;s javadoc says: &lt;/p&gt;

&lt;p&gt;&quot;A predicate that returns false the first n times it is invoked, and true thereafter.&quot;&lt;/p&gt;

&lt;p&gt;The description of Limit could be updated to match with Offset.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12528746">FUNCTOR-5</key>
            <summary>Complete the javadoc description of Limit</summary>
                <type id="3" iconUrl="https://issues.apache.org/jira/images/icons/task.gif">Task</type>
                                <priority id="5" iconUrl="https://issues.apache.org/jira/images/icons/priority_trivial.gif">Trivial</priority>
                    <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/status_resolved.gif">Resolved</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="simone.tripodi">Simone Tripodi</assignee>
                                <reporter username="kinow">Bruno P. Kinoshita</reporter>
                        <labels>
                    </labels>
                <created>Tue, 25 Oct 2011 19:54:47 +0000</created>
                <updated>Tue, 25 Oct 2011 20:26:03 +0000</updated>
                    <resolved>Tue, 25 Oct 2011 20:26:03 +0000</resolved>
                                                                    <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="13135370" author="kinow" created="Tue, 25 Oct 2011 19:55:22 +0000"  >&lt;p&gt;The patch attached contains a change in Limit to complete its javadoc description.&lt;/p&gt;</comment>
                    <comment id="13135397" author="simone.tripodi" created="Tue, 25 Oct 2011 20:26:03 +0000"  >&lt;p&gt;patch applied, obrigado Bruno!&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12500744" name="FUNCTOR-5.patch" size="544" author="kinow" created="Tue, 25 Oct 2011 19:55:22 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Tue, 25 Oct 2011 20:26:03 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>

<item>
            <title>[FUNCTOR-8] [PATCH] Possible NPE in TransformedGenerator if getWrappedGenerator() is overridden to return null</title>
                <link>https://issues.apache.org/jira/browse/FUNCTOR-8</link>
                <project id="12312520" key="FUNCTOR">Commons Functor</project>
                        <description>&lt;p&gt;If we override getWrappedGenerator method in TransformedGenerator to return null, it may result in a NullPointerException if hashCode is called.&lt;/p&gt;

&lt;p&gt;Attached the patch for it, and below a snippet of code to reproduce this issue.&lt;/p&gt;

&lt;p&gt;    TransformedGenerator&amp;lt;Integer, Integer&amp;gt; t = new TransformedGenerator&amp;lt;Integer, Integer&amp;gt;(&lt;br/&gt;
	new IntegerRange(1, 10), new UnaryFunction&amp;lt;Integer, Integer&amp;gt;() {&lt;br/&gt;
		public Integer evaluate(Integer obj) {
			return obj += 1;
		}&lt;br/&gt;
   	}) {&lt;br/&gt;
    	@Override&lt;br/&gt;
	    protected Generator&amp;lt;? extends Integer&amp;gt; getWrappedGenerator() {
    		return null;
    	}&lt;br/&gt;
    };&lt;/p&gt;

&lt;p&gt;    TransformedGenerator&amp;lt;Integer, Integer&amp;gt; t2 = new TransformedGenerator&amp;lt;Integer, Integer&amp;gt;(&lt;br/&gt;
	new IntegerRange(1, 10), new UnaryFunction&amp;lt;Integer, Integer&amp;gt;() {&lt;br/&gt;
		public Integer evaluate(Integer obj) {
			return obj -= 1;
		}&lt;br/&gt;
	});&lt;/p&gt;

&lt;p&gt;    System.out.println(t.equals(t2));&lt;/p&gt;

&lt;p&gt;    System.out.println(t.hashCode() == t2.hashCode()); // NPE&lt;/p&gt;

&lt;p&gt;Cheers,&lt;br/&gt;
Bruno P. Kinoshita&lt;/p&gt;</description>
                <environment>&lt;p&gt;ubuntu 11.10, sun-jdk-6, eclipse galileo&lt;/p&gt;</environment>
            <key id="12529615">FUNCTOR-8</key>
            <summary>[PATCH] Possible NPE in TransformedGenerator if getWrappedGenerator() is overridden to return null</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/bug.gif">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priority_major.gif">Major</priority>
                    <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/status_resolved.gif">Resolved</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="simone.tripodi">Simone Tripodi</assignee>
                                <reporter username="kinow">Bruno P. Kinoshita</reporter>
                        <labels>
                    </labels>
                <created>Tue, 1 Nov 2011 03:12:55 +0000</created>
                <updated>Thu, 31 May 2012 15:44:24 +0000</updated>
                    <resolved>Thu, 31 May 2012 15:44:24 +0000</resolved>
                                            <fixVersion>1.0</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                        <watches>1</watches>
                                                    <comments>
                    <comment id="13140879" author="kinow" created="Tue, 1 Nov 2011 03:13:52 +0000"  >&lt;p&gt;A fix for the NPE in TransformedGenerator.&lt;/p&gt;</comment>
                    <comment id="13141096" author="kinow" created="Tue, 1 Nov 2011 12:09:36 +0000"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/FUNCTOR-8&quot; title=&quot;[PATCH] Possible NPE in TransformedGenerator if getWrappedGenerator() is overridden to return null&quot;&gt;&lt;del&gt;FUNCTOR-8&lt;/del&gt;&lt;/a&gt;-tests.patch includes a unit test for &lt;a href=&quot;https://issues.apache.org/jira/browse/FUNCTOR-8&quot; title=&quot;[PATCH] Possible NPE in TransformedGenerator if getWrappedGenerator() is overridden to return null&quot;&gt;&lt;del&gt;FUNCTOR-8&lt;/del&gt;&lt;/a&gt;.patch. &lt;/p&gt;

&lt;p&gt;I attached a separated file for part of this class is also contained in &lt;a href=&quot;https://issues.apache.org/jira/browse/FUNCTOR-7&quot; title=&quot;[PATCH] Tests for generators&quot;&gt;&lt;del&gt;FUNCTOR-7&lt;/del&gt;&lt;/a&gt;.patch, so it may help while committing it if &lt;a href=&quot;https://issues.apache.org/jira/browse/FUNCTOR-7&quot; title=&quot;[PATCH] Tests for generators&quot;&gt;&lt;del&gt;FUNCTOR-7&lt;/del&gt;&lt;/a&gt; has already been applied. &lt;/p&gt;</comment>
                    <comment id="13286670" author="simone.tripodi" created="Thu, 31 May 2012 15:44:24 +0000"  >&lt;p&gt;patch applied, see r1344780&lt;/p&gt;

&lt;p&gt;thanks once again for contributing, Bruno!&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12501760" name="FUNCTOR-8-tests.patch" size="5818" author="kinow" created="Tue, 1 Nov 2011 12:09:36 +0000" />
                    <attachment id="12501728" name="FUNCTOR-8.patch" size="715" author="kinow" created="Tue, 1 Nov 2011 03:13:51 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Thu, 31 May 2012 15:44:24 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>

<item>
            <title>[FUNCTOR-16] [PATCH] Fix checkstyle errors</title>
                <link>https://issues.apache.org/jira/browse/FUNCTOR-16</link>
                <project id="12312520" key="FUNCTOR">Commons Functor</project>
                        <description>&lt;p&gt;This patch fixes checkstyle errors in &lt;span class=&quot;error&quot;&gt;&amp;#91;functor&amp;#93;&lt;/span&gt;.&lt;/p&gt;</description>
                <environment>&lt;p&gt;JDK 1.6, Eclipse Indigo, Debian Squeeze x86-64&lt;/p&gt;</environment>
            <key id="12554722">FUNCTOR-16</key>
            <summary>[PATCH] Fix checkstyle errors</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/improvement.gif">Improvement</type>
                                <priority id="5" iconUrl="https://issues.apache.org/jira/images/icons/priority_trivial.gif">Trivial</priority>
                    <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/status_resolved.gif">Resolved</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="simone.tripodi">Simone Tripodi</assignee>
                                <reporter username="kinow">Bruno P. Kinoshita</reporter>
                        <labels>
                        <label>checkstyle</label>
                        <label>patch</label>
                    </labels>
                <created>Thu, 10 May 2012 17:50:34 +0000</created>
                <updated>Thu, 31 May 2012 15:56:24 +0000</updated>
                    <resolved>Thu, 31 May 2012 15:56:24 +0000</resolved>
                                            <fixVersion>1.0</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                        <watches>1</watches>
                                                    <comments>
                    <comment id="13272547" author="kinow" created="Thu, 10 May 2012 17:52:00 +0000"  >&lt;p&gt;Patch file. No errors found running mvn clean test with the modifications in this file, using JDK 1.6.&lt;/p&gt;</comment>
                    <comment id="13286677" author="simone.tripodi" created="Thu, 31 May 2012 15:56:24 +0000"  >&lt;p&gt;patch applied, see r1344786&lt;/p&gt;

&lt;p&gt;&lt;em&gt;obrigad&#227;o&lt;/em&gt; for contributing, Bruno!&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12526382" name="FUNCTOR-16.patch" size="2736" author="kinow" created="Thu, 10 May 2012 17:52:00 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Thu, 31 May 2012 15:56:24 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>

<item>
            <title>[FUNCTOR-15] [PATCH] Distribute tests from TestAlgorithms into several test classes under algorithm test package</title>
                <link>https://issues.apache.org/jira/browse/FUNCTOR-15</link>
                <project id="12312520" key="FUNCTOR">Commons Functor</project>
                        <description>&lt;p&gt;Several algorithms are tested in o.a.c.functor.TestAlgorithms. This test class has too many methods, and this way it&apos;s harder to include new tests or manage existing ones. We will create separate test classes for each algorithm under o.a.c.functor.algorithm, and will include generics too. &lt;/p&gt;</description>
                <environment>&lt;p&gt;debian lenny, eclipse indigo, sun java 6&lt;/p&gt;</environment>
            <key id="12550190">FUNCTOR-15</key>
            <summary>[PATCH] Distribute tests from TestAlgorithms into several test classes under algorithm test package</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/improvement.gif">Improvement</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priority_minor.gif">Minor</priority>
                    <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/status_resolved.gif">Resolved</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="simone.tripodi">Simone Tripodi</assignee>
                                <reporter username="kinow">Bruno P. Kinoshita</reporter>
                        <labels>
                        <label>testing</label>
                    </labels>
                <created>Mon, 9 Apr 2012 06:07:31 +0000</created>
                <updated>Thu, 31 May 2012 16:15:53 +0000</updated>
                    <resolved>Thu, 31 May 2012 16:13:28 +0000</resolved>
                                            <fixVersion>1.0</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                        <watches>2</watches>
                                                    <comments>
                    <comment id="13250459" author="kinow" created="Tue, 10 Apr 2012 05:24:12 +0000"  >&lt;p&gt;Patch with tests for algorithms. &lt;/p&gt;

&lt;p&gt;This patch also includes toString() methods in algorithms. Some algorithms needed the toString() to pass the tests (BaseFunctorTest). &lt;/p&gt;

&lt;p&gt;I implemented toString() in all algorithms to keep the same behavior regarding toString() in all algorithms.&lt;/p&gt;

&lt;p&gt;I reviewed the license headers, checkstyle issues and general formatting &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; Hope this patch is good.&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;</comment>
                    <comment id="13286696" author="simone.tripodi" created="Thu, 31 May 2012 16:13:28 +0000"  >&lt;p&gt;patch applied, see r1344796&lt;/p&gt;

&lt;p&gt;please pay attention when adding new files: no tabs and no trailing spaces (also on empty lines)&lt;/p&gt;

&lt;p&gt;thanks!&lt;/p&gt;</comment>
                    <comment id="13286701" author="kinow" created="Thu, 31 May 2012 16:15:53 +0000"  >&lt;p&gt;Thanks Simo, I will pay attention to this. I believe I can configure Eclipse or maybe Checkstyle for this.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12522071" name="FUNCTOR-15.patch" size="57952" author="kinow" created="Tue, 10 Apr 2012 05:24:11 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Thu, 31 May 2012 16:13:28 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>

<item>
            <title>[FUNCTOR-13] EachElement should be able to work on any Iterable</title>
                <link>https://issues.apache.org/jira/browse/FUNCTOR-13</link>
                <project id="12312520" key="FUNCTOR">Commons Functor</project>
                        <description>&lt;p&gt;from &lt;a href=&quot;http://markmail.org/message/ythw55yad5lrvqrj&quot;&gt;http://markmail.org/message/ythw55yad5lrvqrj&lt;/a&gt;&lt;/p&gt;</description>
                <environment></environment>
            <key id="12539251">FUNCTOR-13</key>
            <summary>EachElement should be able to work on any Iterable</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/improvement.gif">Improvement</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priority_major.gif">Major</priority>
                    <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/status_resolved.gif">Resolved</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="ebourg">Emmanuel Bourg</reporter>
                        <labels>
                    </labels>
                <created>Sat, 21 Jan 2012 03:12:10 +0000</created>
                <updated>Sat, 21 Jan 2012 19:18:30 +0000</updated>
                    <resolved>Sat, 21 Jan 2012 19:14:58 +0000</resolved>
                                            <fixVersion>1.0</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="13190511" author="mbenson" created="Sat, 21 Jan 2012 19:14:58 +0000"  >&lt;p&gt;Committed revision 1234401.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Sat, 21 Jan 2012 19:14:58 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>

<item>
            <title>[FUNCTOR-9] [PATCH] Make Limit and Offset Serializable</title>
                <link>https://issues.apache.org/jira/browse/FUNCTOR-9</link>
                <project id="12312520" key="FUNCTOR">Commons Functor</project>
                        <description>&lt;p&gt;In org.apache.commons.functor.core all classes that are in someway a Functor implement Serializable, with exception of Limit and Offset (as pointed by E. Bourg in the mailing list). This patch marks both classes as Serializable and includes equals() and hashcode() methods.&lt;/p&gt;

&lt;p&gt;Notice that these changes are already covered by the test org.apache.commons.functor.BaseFunctorTest#testSerializeDeserializeThenCompare. &lt;/p&gt;

&lt;p&gt;Bruno P. Kinoshita&lt;/p&gt;</description>
                <environment>&lt;p&gt;Win7 Enterprise, jdk-1.6.0_27, Eclipse Galileo&lt;/p&gt;</environment>
            <key id="12529658">FUNCTOR-9</key>
            <summary>[PATCH] Make Limit and Offset Serializable</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/improvement.gif">Improvement</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priority_minor.gif">Minor</priority>
                    <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/status_resolved.gif">Resolved</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="simone.tripodi">Simone Tripodi</assignee>
                                <reporter username="kinow">Bruno P. Kinoshita</reporter>
                        <labels>
                    </labels>
                <created>Tue, 1 Nov 2011 14:00:47 +0000</created>
                <updated>Thu, 31 May 2012 16:07:02 +0000</updated>
                    <resolved>Thu, 31 May 2012 16:07:02 +0000</resolved>
                                            <fixVersion>1.0</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                        <watches>1</watches>
                                                    <comments>
                    <comment id="13209470" author="kinow" created="Thu, 16 Feb 2012 16:04:20 +0000"  >&lt;p&gt;Hi all, &lt;/p&gt;

&lt;p&gt;I created this issue from &lt;a href=&quot;http://markmail.org/message/ythw55yad5lrvqrj&quot;&gt;http://markmail.org/message/ythw55yad5lrvqrj&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;More specifically: &lt;/p&gt;

&lt;p&gt;&quot;- Why aren&apos;t Limit and Offset serializable like the other classes in the core package?&quot;&lt;/p&gt;

&lt;p&gt;However, recently in &lt;span class=&quot;error&quot;&gt;&amp;#91;math&amp;#93;&lt;/span&gt; there is a discussion &lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; on either make everything Serializable or not. &lt;/p&gt;

&lt;p&gt;Maybe we could consider thinking about either making everything Serializable (as is now) or provide another mechanism for doing so or let the user handle the serialization. WDYT? &lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; &lt;a href=&quot;http://commons.markmail.org/message/6zi7lzqlgmfb5djb&quot;&gt;http://commons.markmail.org/message/6zi7lzqlgmfb5djb&lt;/a&gt;&lt;/p&gt;</comment>
                    <comment id="13286686" author="simone.tripodi" created="Thu, 31 May 2012 16:07:02 +0000"  >&lt;p&gt;very good, patch applied, see r1344792&lt;/p&gt;

&lt;p&gt;thanks and all the best!&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12501773" name="FUNCTOR-9.patch" size="3829" author="kinow" created="Tue, 1 Nov 2011 14:02:03 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Thu, 31 May 2012 16:07:02 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>

<item>
            <title>[FUNCTOR-7] [PATCH] Tests for generators</title>
                <link>https://issues.apache.org/jira/browse/FUNCTOR-7</link>
                <project id="12312520" key="FUNCTOR">Commons Functor</project>
                        <description>&lt;p&gt;Hi, attached are some tests for all generators. &lt;/p&gt;

&lt;p&gt;I am studying Functor/FP by writing tests and reading the existing ones, as well as the examples. I will submit more patches in the following days &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;While writing these tests I&apos;ve found some strange situations. I will analyze them thoroughly and will file issue(s) when appropriate.&lt;/p&gt;

&lt;p&gt;TIA,&lt;br/&gt;
Bruno P. Kinoshita &lt;/p&gt;</description>
                <environment>&lt;p&gt;Ubuntu 11.10, sun-jdk-6, Eclipse Galileo&lt;/p&gt;</environment>
            <key id="12529613">FUNCTOR-7</key>
            <summary>[PATCH] Tests for generators</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/improvement.gif">Improvement</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priority_minor.gif">Minor</priority>
                    <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/status_resolved.gif">Resolved</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="simone.tripodi">Simone Tripodi</assignee>
                                <reporter username="kinow">Bruno P. Kinoshita</reporter>
                        <labels>
                    </labels>
                <created>Tue, 1 Nov 2011 02:51:31 +0000</created>
                <updated>Thu, 31 May 2012 15:25:47 +0000</updated>
                    <resolved>Thu, 31 May 2012 15:25:47 +0000</resolved>
                                            <fixVersion>1.0</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                        <watches>1</watches>
                                                    <comments>
                    <comment id="13140872" author="kinow" created="Tue, 1 Nov 2011 02:52:37 +0000"  >&lt;p&gt;Patch with the tests for generators.&lt;/p&gt;</comment>
                    <comment id="13286654" author="simone.tripodi" created="Thu, 31 May 2012 15:25:47 +0000"  >&lt;p&gt;patch applied, see r1344774&lt;/p&gt;

&lt;p&gt;thanks a lot Bruno for contributing!!!&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12501726" name="FUNCTOR-7.patch" size="31693" author="kinow" created="Tue, 1 Nov 2011 02:52:34 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Thu, 31 May 2012 15:25:47 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>

<item>
            <title>[FUNCTOR-4] [PATCH] Add easily accessible, user-friendly examples</title>
                <link>https://issues.apache.org/jira/browse/FUNCTOR-4</link>
                <project id="12312520" key="FUNCTOR">Commons Functor</project>
                        <description>&lt;p&gt;Perhaps we could add some pages with examples to the project site? &lt;/p&gt;

&lt;p&gt;As pointed by Emmanuel Bourg, at moment the examples point directly to classes in the SVN.  We could add some basic examples and also point to sample code in the SVN, something similar to what is done in DBUtils &lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; and Commons-Pool &lt;span class=&quot;error&quot;&gt;&amp;#91;2&amp;#93;&lt;/span&gt;.&lt;/p&gt;

&lt;p&gt;I&apos;m reading FP for Java Developers, there are some basic examples that could be implemented using Functor and put in the Examples page (I believe grand part is already implemented in the tests classes).&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; &lt;a href=&quot;http://commons.apache.org/dbutils/examples.html&quot;&gt;http://commons.apache.org/dbutils/examples.html&lt;/a&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;2&amp;#93;&lt;/span&gt; &lt;a href=&quot;http://commons.apache.org/pool/examples.html&quot;&gt;http://commons.apache.org/pool/examples.html&lt;/a&gt;&lt;/p&gt;</description>
                <environment></environment>
            <key id="12528712">FUNCTOR-4</key>
            <summary>[PATCH] Add easily accessible, user-friendly examples</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/improvement.gif">Improvement</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priority_minor.gif">Minor</priority>
                    <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/status_resolved.gif">Resolved</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="simone.tripodi">Simone Tripodi</assignee>
                                <reporter username="kinow">Bruno P. Kinoshita</reporter>
                        <labels>
                    </labels>
                <created>Tue, 25 Oct 2011 16:45:18 +0000</created>
                <updated>Thu, 31 May 2012 16:03:29 +0000</updated>
                    <resolved>Thu, 31 May 2012 16:03:29 +0000</resolved>
                                            <fixVersion>1.0</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                        <watches>1</watches>
                                                    <comments>
                    <comment id="13135244" author="mbenson" created="Tue, 25 Oct 2011 17:18:04 +0000"  >&lt;p&gt;This is probably possible, but based on the text in preface section 3 we should seek permission IMO, even if the code is not directly copied.  Better safe than sorry.&lt;/p&gt;</comment>
                    <comment id="13135262" author="kinow" created="Tue, 25 Oct 2011 17:32:53 +0000"  >&lt;p&gt;You&apos;re right indeed Matt. Thanks for the heads up.&lt;/p&gt;

&lt;p&gt;Perhaps we could then create just basic examples covering the basics (Functor, Predicate, Procedure, operations on data structures) without using the examples of the book, what would be simpler.&lt;/p&gt;</comment>
                    <comment id="13144105" author="kinow" created="Fri, 4 Nov 2011 16:15:01 +0000"  >&lt;p&gt;Added a patch with some examples for review. &lt;/p&gt;

&lt;p&gt;Also uploaded the site to &lt;a href=&quot;http://www.kinoshita.eti.br/public_files/site/examples.html&quot;&gt;http://www.kinoshita.eti.br/public_files/site/examples.html&lt;/a&gt;, so you can see it in your browser too. &lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Added links to javadoc, just like DBTUtils does&lt;/li&gt;
	&lt;li&gt;Added examples for Predicate, Function and Procedure, following the order that they appear in the main page&lt;/li&gt;
	&lt;li&gt;Added an extra example that combines the three functors with generator and composite functors&lt;/li&gt;
	&lt;li&gt;Removed the information on how to build&lt;/li&gt;
	&lt;li&gt;Moved the practical part (and more advanced) to the bottom of the page, so the reader may already have some notion on the basics before reading it&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Seems like the links to all the code katas are being redirected to &lt;a href=&quot;http://pragdave.pragprog.com/&quot;&gt;http://pragdave.pragprog.com/&lt;/a&gt;. Not sure if they are available somewhere else or should be removed/updated.&lt;/p&gt;

&lt;p&gt;I&apos;m learning functional programming to use Functor in another open source project, so forgive me in case there are any mistakes. Feel free to modify the patch, criticize or propose changes. No hard feelings &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &lt;/p&gt;

&lt;p&gt;Cheers, have a great WE.&lt;/p&gt;

&lt;p&gt;Bruno P. Kinoshita&lt;/p&gt;</comment>
                    <comment id="13286681" author="simone.tripodi" created="Thu, 31 May 2012 16:03:29 +0000"  >&lt;p&gt;charming like a sunshine, patch applied, see r1344790&lt;/p&gt;

&lt;p&gt;thanks once again Bruno!&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12502473" name="FUNCTOR-4.patch" size="20272" author="kinow" created="Fri, 4 Nov 2011 16:15:00 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Tue, 25 Oct 2011 17:18:04 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>

<item>
            <title>[FUNCTOR-1] [functor] New components: summarize and aggregate</title>
                <link>https://issues.apache.org/jira/browse/FUNCTOR-1</link>
                <project id="12312520" key="FUNCTOR">Commons Functor</project>
                        <description>&lt;p&gt;This is the next step from &lt;a href=&quot;https://issues.apache.org/jira/browse/SANDBOX-340&quot;&gt;https://issues.apache.org/jira/browse/SANDBOX-340&lt;/a&gt; &amp;#8211; as instructed I&apos;m finally hoping to get the code in the right place and hopefully this is something that the functor component could do with.&lt;br/&gt;
Whereas initially I just started with the summarizer component, I have added now the second one, the &quot;aggregator&quot; as they are somehow related. If this code proves to be useful to functor in any way, it would actually be good to get some feedback on these 2 to see if the class hierarchy can in fact be changed to share some common functionality as I feel (probably due to the similar needs that lead to writing/using these components) that somehow they should share a common base.&lt;br/&gt;
In brief, the 2 components:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;aggregator: this just allows for data to be aggregated in a user defined way (e.g. stored in a list for the purpose of averaging, computing the arithmetic median etc). The classes provided actually offer the implementation for storing data in a list and computing the above-mentioned values or summing up everything.&lt;/li&gt;
	&lt;li&gt;timed summarizer: this is another variation of the aggreator, however, it adds the idea of regular &quot;flushes&quot;, so based on a timer it will reset the value and start summing/aggregating the data again. Rather than using an aggregator which would store the whole data series (possibly for applying more complex formulas), this component just computes on the fly on each request the formula and stores the result of it. (Which does mean things like computing arithmetic mean, median etc would be difficult to compute without knowing upfront how many calls will be received &amp;#8211; i.e. how many elements we will be required to summarize/aggregate.) So the memory footprint of running this is much smaller &amp;#8211; even though, as I said, it achieves similar results. I have only provided a summarizer which operates on integers, but obviously others for float, double etc can be created if we go ahead with this design.&lt;br/&gt;
Hopefully the above make sense; this code has resulted from finding myself writing similar components to these a few times and because it&apos;s always been either one type (e.g. aggregator) or another (summarizer) I haven&apos;t given quite possibly enough thought to the class design to join these 2. Also, unfortunately, the time I sat down to make these components a bit more general and submitted issue 340 was nearly 3 months ago so I&apos;m trying to remember myself all the ideas I had at a time so bear with me please if these are still  a bit fuzzy &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; However, if you can make use of these I&apos;m quite happy to elaborate on areas that are unclear and obviously put some effort into getting these components to the standards required to put these into a release.&lt;/li&gt;
&lt;/ul&gt;
</description>
                <environment>&lt;p&gt;JDK 1.6.0_25 but should work with any JDK 5+ (possibly 1.4 though I haven&apos;t tested).&lt;/p&gt;</environment>
            <key id="12520649">FUNCTOR-1</key>
            <summary>[functor] New components: summarize and aggregate</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/newfeature.gif">New Feature</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priority_minor.gif">Minor</priority>
                    <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/status_resolved.gif">Resolved</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="simone.tripodi">Simone Tripodi</assignee>
                                <reporter username="liviutudor">Liviu Tudor</reporter>
                        <labels>
                        <label>features</label>
                    </labels>
                <created>Mon, 29 Aug 2011 22:52:17 +0000</created>
                <updated>Thu, 31 May 2012 15:00:27 +0000</updated>
                    <resolved>Thu, 31 May 2012 15:00:26 +0000</resolved>
                                            <fixVersion>1.0</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                        <watches>2</watches>
                                                    <comments>
                    <comment id="13093284" author="liviutudor" created="Mon, 29 Aug 2011 22:53:15 +0000"  >&lt;p&gt;Diff taken against trunk on 29/Aug/2011 (about midnight in UK &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    <comment id="13094610" author="simone.tripodi" created="Wed, 31 Aug 2011 15:16:22 +0000"  >&lt;p&gt;Hi Liviu,&lt;br/&gt;
thanks for your contribution! some suggestions in order to apply the patch:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Instead of adding new interfaces, I suggest you reusing existing functor APIs, i.e. if I were you, I would modify the &lt;tt&gt;org.apache.commons.functor.aggregate.Aggregator&amp;lt;T&amp;gt;&lt;/tt&gt; interface in order to inherit from &lt;tt&gt;org.apache.commons.functor.UnaryProcedure&amp;lt;A&amp;gt;&lt;/tt&gt;; take a look at the existing codebase, don&apos;t just add new stuff!&lt;/li&gt;
	&lt;li&gt;The Apache header is missing in every class you contributed, it must be included in order to apply the patch;&lt;/li&gt;
	&lt;li&gt;Please remove the @author tags, committers/contributors are mentioned in the POM (ignore existing tags) - add yourself in the POM in the contributors list;&lt;/li&gt;
	&lt;li&gt;&lt;tt&gt;org.apache.commons.functor.summarizer.TimedSummarizer&lt;/tt&gt; could inherit from &lt;tt&gt;org.apache.commons.functor.BinaryFunction&lt;/tt&gt;;&lt;/li&gt;
	&lt;li&gt;I didn&apos;t understand why the &lt;tt&gt;org.apache.commons.functor.summarizer.TimedSummarizer#MAIN_TIMER&lt;/tt&gt; is static, it IIUC could cause some leaks.&lt;/li&gt;
	&lt;li&gt;Test cases must be implement as valid JUnit tests executed by the surefire plugin, AFAIK usage of static main() methods as tests is not encouraged.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Many thanks in advance for your effort, looking forward for the next patch! &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
 *&lt;/p&gt;</comment>
                    <comment id="13094689" author="liviutudor" created="Wed, 31 Aug 2011 16:59:46 +0000"  >&lt;p&gt;Hi Simone,&lt;/p&gt;

&lt;p&gt;Thanks for the feedback &amp;#8211; my first commit, so I expected a lot of things to go wrong.&lt;br/&gt;
Since my code was initially committed to &lt;tt&gt;commons.lang&lt;/tt&gt;, I didn&apos;t have access to the classes you mentioned, so I will have a look and use them.&lt;br/&gt;
Secondly, regarding the Apache header, am I correct in assuming that simply copying and pasting it from an existing class in the repository should be enough? Point taken about the &lt;tt&gt;@author&lt;/tt&gt; tag, that was generated automatically by my Eclipse (note to self: adjust my &lt;em&gt;Eclipse&lt;/em&gt; templates to remove that and a few other things!).&lt;br/&gt;
I didn&apos;t spend too much time on unit testing purely because I wasn&apos;t sure still if this was the right place to commit this component, now that I am on the right track I will spend some time to implement those properly.&lt;br/&gt;
Last but not least, &lt;tt&gt;org.apache.commons.functor.summarizer.TimedSummarizer#MAIN_TIMER&lt;/tt&gt; is static in order to avoid creating a new one for each instance &amp;#8211; but you are right, it can create a memory leak. I will actually spend some time on it and probably provide a factory for creating instances of the &lt;tt&gt;TimedSummarizer&lt;/tt&gt; class which will allow for the instance to use it&apos;s own &lt;tt&gt;Timer&lt;/tt&gt; or a shared one; this is so &quot;power users&quot; can use the shared one and minimize the memory and threading footprint, while still allowing for Joe Average to avoid the memory leakage by using a per-instance &lt;tt&gt;Timer&lt;/tt&gt;. Do you think that would be a good idea?&lt;/p&gt;</comment>
                    <comment id="13096001" author="simone.tripodi" created="Fri, 2 Sep 2011 14:13:08 +0000"  >&lt;p&gt;Hi Liviu!&lt;br/&gt;
about the Apache header, just open existing functor classes and copy from them, it is more than enough &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/tongue.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;It would be really appreciated if you could improve unit testing (take a look also to the generated code coverage report) otherwise, you can understand, people would be a little reluctant on adding non tested code...&lt;/p&gt;

&lt;p&gt;I&apos;d tend to agree that passing an existing &lt;tt&gt;Timer&lt;/tt&gt; would allow smarter users better managing their resources, go for it and see how things go &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Looking forward for the next patch!&lt;/p&gt;</comment>
                    <comment id="13099643" author="liviutudor" created="Wed, 7 Sep 2011 23:04:42 +0000"  >&lt;p&gt;OK so I reckon I&apos;m 90% there so I&apos;m just submitting this patch to see if I&apos;m doing something right or what am I doing wrong.&lt;br/&gt;
I&apos;ve reworked the whole package structure to use &lt;tt&gt;UnaryFunction&lt;/tt&gt; and &lt;tt&gt;BinaryFunction&lt;/tt&gt; and as such I ended up with just one package (aggregator) and the &lt;em&gt;summarizer&lt;/em&gt; becomes just an implementation of that (&lt;tt&gt;AbstractTimedAggregator&lt;/tt&gt;). I&apos;m still not 100% sure with having the &lt;tt&gt;AbstractListBackedAggregator&lt;/tt&gt; and &lt;tt&gt;AbstractNoStoreAggregator&lt;/tt&gt; extending &lt;tt&gt;AbstractTimedAggregator&lt;/tt&gt; &amp;#8211; and I wanted to run this past you guys to see what would be a more elegant solution?&lt;br/&gt;
I need to provide unit tests for &lt;tt&gt;AbstractTimedAggregator&lt;/tt&gt; and add a couple of more tests to the exiting ones to test for timer support as well but otherwise I think it&apos;s done.&lt;br/&gt;
Would love some feedback and suggestions.&lt;/p&gt;</comment>
                    <comment id="13099644" author="liviutudor" created="Wed, 7 Sep 2011 23:05:19 +0000"  >&lt;p&gt;update code &amp;#8211; 90% done (hopefully!)&lt;/p&gt;</comment>
                    <comment id="13102461" author="simone.tripodi" created="Mon, 12 Sep 2011 06:46:02 +0000"  >&lt;p&gt;I had a look at the new patch, few more minor comments:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;since &lt;tt&gt;Aggregator&amp;lt;T&amp;gt;&lt;/tt&gt; now extends &lt;tt&gt;Function&amp;lt;T&amp;gt;&lt;/tt&gt;, there&apos;s no need to redeclare the &lt;tt&gt;T evaluate()&lt;/tt&gt; method;&lt;/li&gt;
	&lt;li&gt;in abstract implementations, Class members access has to be done via getters/setters instead of making fields protected (checkstyle would complain about it)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Moreover, a favor: can you please create a documentation page under &lt;tt&gt;src/site/xdoc/&lt;/tt&gt;? That would be useful to put users aware of such feature (and yes, the rest of documentation is still a TODO &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/tongue.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;)&lt;/p&gt;

&lt;p&gt;Many thanks in advance for your hard work!&lt;/p&gt;</comment>
                    <comment id="13102471" author="simone.tripodi" created="Mon, 12 Sep 2011 07:09:52 +0000"  >&lt;p&gt;Forgot to ask the favor of having a look also at generated findbugs/checkstyle reports and fix potential errors/violations in classes in the package you added.&lt;br/&gt;
TIA!&lt;/p&gt;</comment>
                    <comment id="13102724" author="liviutudor" created="Mon, 12 Sep 2011 15:16:25 +0000"  >&lt;p&gt;Hi Simone,&lt;/p&gt;

&lt;p&gt;Agreed on not needing the &lt;tt&gt;evaluate()&lt;/tt&gt; function &amp;#8211; really it was included there so I can have the JavaDoc section for it &amp;#8211; but I&apos;ve moved that in the class header.&lt;br/&gt;
Will make the changes to use getters/setters for abstract classes; meanwhile though, to help me address all the checkstyle/findbugs issues, can you point me in the right direction as to how to run the findbugs/checkstyle against the code and where would I find the results? (sorry a bit new to the whole maven setup &amp;#8211; and luckily in most environments i&apos;ve used it so far, I relied on the automated hudson/integration to produce these nightly reports &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
With regards to the document under &lt;tt&gt;src/site/xdocs&lt;/tt&gt; &amp;#8211; what should this include? A high level overview of the components and possibly including sample code maybe with patterns of usage? Or what things should I touch on?&lt;br/&gt;
One last thing, going back through your comments, I&apos;ve only just noticed a small discrepancy &amp;#8211; you have asked me to add myself to the list of developers in the &lt;tt&gt;pom.xml&lt;/tt&gt; &amp;#8211; I opted to put myself on the contributors list as I&apos;m guessing &lt;em&gt;developers&lt;/em&gt; would be the Apache peeps actually maintaing/managing this project, right? Not a big thing really, just trying to iron out all the small details at the moment, so thought I&apos;d ask about this as well.&lt;br/&gt;
Sorry to be a pain!&lt;/p&gt;</comment>
                    <comment id="13102956" author="simone.tripodi" created="Mon, 12 Sep 2011 19:37:32 +0000"  >&lt;p&gt;Hi Liviu!&lt;br/&gt;
no pain at all - smart and volunteering people like you are lifeblood for community&apos;s health, so I am more than happy to put contributors in the position of working in the better way &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;So, to produce those reports, it is enough you run &lt;tt&gt;mvn clean site &amp;amp;&amp;amp; open target/site/checkstyle.html&lt;/tt&gt;, it will produce a page like the one actually online&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;.&lt;br/&gt;
Then, if you &lt;tt&gt;open target/site/cobertura/index.html&lt;/tt&gt; you can have a look at the generated cobertura report.&lt;br/&gt;
Just take care of classes you put in the summarize and aggregate package, no need to take care of the rest - I&apos;m doing it during the spare time, feel free to fill a new issue with a new patch anyway &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Documentation: take a look at existing pages, the xdoc format&lt;span class=&quot;error&quot;&gt;&amp;#91;2&amp;#93;&lt;/span&gt; is ~html, so not hard to write. And yes, just an overview of added classes, samples, patterns... under both PoVs of users (how to write client code) and developers (extending APIs, if allowed, etc)&lt;/p&gt;

&lt;p&gt;Pom: you did write, sorry for the mistake, actually {&lt;tt&gt;&amp;lt;contributors&amp;gt;&lt;/tt&gt; is the right place where adding your name - hopefully you will become a committer &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Last: the right place where sharing thoughts and discussing is the dev@ ML, in Apache there&apos;s the mantra &quot;if it didn&apos;t happen in the list, it didn&apos;t happen&quot;, JIRA is more like a &quot;wall stories&quot; reminder &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Looking forward for the next patch, have a nice day!&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; &lt;a href=&quot;http://commons.apache.org/sandbox/functor/checkstyle.html&quot;&gt;http://commons.apache.org/sandbox/functor/checkstyle.html&lt;/a&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;2&amp;#93;&lt;/span&gt; &lt;a href=&quot;http://commons.apache.org/sandbox/functor/cobertura/index.html&quot;&gt;http://commons.apache.org/sandbox/functor/cobertura/index.html&lt;/a&gt;&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;3&amp;#93;&lt;/span&gt; &lt;a href=&quot;http://maven.apache.org/doxia/references/xdoc-format.html&quot;&gt;http://maven.apache.org/doxia/references/xdoc-format.html&lt;/a&gt;&lt;/p&gt;</comment>
                    <comment id="13105946" author="simone.tripodi" created="Fri, 16 Sep 2011 08:30:32 +0000"  >&lt;p&gt;Hi Liviu,&lt;br/&gt;
please update your local copy of the code, I recently ported the tests to JUnit4 style.&lt;/p&gt;</comment>
                    <comment id="13107751" author="liviutudor" created="Mon, 19 Sep 2011 11:29:36 +0000"  >&lt;p&gt;Hi Simone, thanks for the heads-up on this, sorry, been away last week only just got back. Will go through the code and your comments and update the code.&lt;/p&gt;</comment>
                    <comment id="13126523" author="simone.tripodi" created="Thu, 13 Oct 2011 12:30:43 +0000"  >&lt;p&gt;Hi Liviu,&lt;br/&gt;
how things are going? Do you need any help from my side to finalize it?&lt;br/&gt;
TIA,&lt;br/&gt;
Simo&lt;/p&gt;</comment>
                    <comment id="13129700" author="liviutudor" created="Tue, 18 Oct 2011 12:56:52 +0000"  >&lt;p&gt;Hi Simone,&lt;/p&gt;

&lt;p&gt;I&apos;ve already replied to you in private, this is just for other maintainers to be aware of this: I&apos;m currently in the process of relocating to Palo Alto, CA (anyone living in the Bay area up for an informal meet at some point? &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; so things a bit hectic but still planning to finish this. ETA is about 2 weeks &amp;#8211; so end of October.&lt;br/&gt;
Hope this is ok,&lt;/p&gt;

&lt;p&gt;Liv&lt;/p&gt;</comment>
                    <comment id="13212470" author="liviutudor" created="Tue, 21 Feb 2012 09:06:15 +0000"  >&lt;p&gt;Hi Simone,&lt;/p&gt;

&lt;p&gt;I finally got around to doing the coding for this. Please have a look at the attached patch &amp;#8211; I checked the findbugs/checkstyle as instructed and as far as I can tell it looks ok.&lt;br/&gt;
Looking forward to your comments on it!&lt;/p&gt;</comment>
                    <comment id="13212471" author="liviutudor" created="Tue, 21 Feb 2012 09:06:47 +0000"  >&lt;p&gt;Patch as per last comment.&lt;/p&gt;</comment>
                    <comment id="13213013" author="liviutudor" created="Tue, 21 Feb 2012 22:12:53 +0000"  >&lt;p&gt;Question &amp;#8211; looking at &lt;a href=&quot;https://issues.apache.org/jira/browse/FUNCTOR-4&quot; title=&quot;[PATCH] Add easily accessible, user-friendly examples&quot;&gt;&lt;del&gt;FUNCTOR-4&lt;/del&gt;&lt;/a&gt; , I need to add some examples etc for these components to make it easier for users. Where would these examples go? &lt;/p&gt;</comment>
                    <comment id="13216357" author="simone.tripodi" created="Sat, 25 Feb 2012 07:43:29 +0000"  >&lt;p&gt;Hi Liviu,&lt;br/&gt;
thanks for the contribution, patch looks good. I have anyway few observations before applying it:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;the name &lt;tt&gt;*AggregatorFunction_2_&lt;/tt&gt; doesn&apos;t help since doesn&apos;t express any semantic. Can you change them in a more self descriptive names?&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;In the &lt;tt&gt;org.apache.commons.functor.aggregate.functions&lt;/tt&gt; package I just see the implementation for &lt;tt&gt;Double&lt;/tt&gt; and one &lt;tt&gt;Integer&lt;/tt&gt; related class - maybe you forgot to &lt;tt&gt;svn add&lt;/tt&gt; the other implementations?&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Could you provide implementations also for other primitive wrappers?&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Documentaion under &lt;tt&gt;src/site/xdoc&lt;/tt&gt; is more than fine and satisfies &lt;a href=&quot;https://issues.apache.org/jira/browse/FUNCTOR-4&quot; title=&quot;[PATCH] Add easily accessible, user-friendly examples&quot;&gt;&lt;del&gt;FUNCTOR-4&lt;/del&gt;&lt;/a&gt; - feel free to enhance the doc adding more samples!&lt;/p&gt;

&lt;p&gt;Thanks for the hard work, looking forward the next patch version!&lt;br/&gt;
-Simo&lt;/p&gt;</comment>
                    <comment id="13216557" author="liviutudor" created="Sat, 25 Feb 2012 22:26:15 +0000"  >&lt;p&gt;Hi Simo,&lt;/p&gt;

&lt;p&gt;Thanks for your feedback &amp;#8211; much appreciated!&lt;br/&gt;
Indeed, I didn&apos;t supply the implementations for other primitives, as I was just checking to see if I&apos;m on the right track, will add those in the next patch.&lt;br/&gt;
I&apos;ll have a think about the naming &amp;#8211; it made (some) sense to me, but you&apos;re right, it&apos;s probably not too descriptive &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
I&apos;ll come back with another patch.&lt;br/&gt;
thanks again,&lt;/p&gt;

&lt;p&gt;Liv&lt;/p&gt;</comment>
                    <comment id="13216591" author="liviutudor" created="Sun, 26 Feb 2012 00:33:26 +0000"  >&lt;p&gt;Hi Simo,&lt;/p&gt;

&lt;p&gt;Another question: I have packaged the examples/docs for this under src/site/aggregate.xml &amp;#8211; which ends up as site/aggregate.html, however this doesn&apos;t get linked from anywhere in the main &quot;menus&quot; &amp;#8211; is there a &quot;standard&quot; way of adding this or just add a hardcoded link to it say under &amp;lt;menu name=&quot;Commons Functor&quot;&amp;gt;?&lt;/p&gt;</comment>
                    <comment id="13216623" author="liviutudor" created="Sun, 26 Feb 2012 03:43:54 +0000"  >&lt;p&gt;Updated patch as of 25/Feb/2012&lt;/p&gt;</comment>
                    <comment id="13216624" author="liviutudor" created="Sun, 26 Feb 2012 03:47:14 +0000"  >&lt;p&gt;Submitted new patch (had some time on my hands this Saturday &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; which hopefully addresses the issues signalled by Simo.&lt;br/&gt;
I have only provided implementations for Integer and Double &amp;#8211; I could provide implementations for Float, Long, Byte as well though not sure if those are needed as one can easily revert (in most cases) to Integer/Double? Let me know how you feel about that.&lt;br/&gt;
I&apos;ve updated the documentation (aggregate.xml) and changed examples.xml to include a reference to this and also point to the 2 new packages I&apos;ve included under test which contain a few Java sources showing various usages for this component.&lt;br/&gt;
Looking forward to your feedback on this!&lt;/p&gt;

&lt;p&gt;Liv&lt;/p&gt;</comment>
                    <comment id="13235341" author="kinow" created="Thu, 22 Mar 2012 04:42:17 +0000"  >&lt;p&gt;Hi Liviu! &lt;/p&gt;

&lt;p&gt;First of all, it&apos;s very clear you have put a lot of effort on this patch. I&apos;ve applied at a local working copy of functor trunk, and it is very neat indeed. I wish my patches were as good as yours &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &lt;/p&gt;

&lt;p&gt;I&apos;m starting to learn about aggregators now, while reading the code and documents that you wrote. So feel free to correct or comment any of my points below.&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;The documentation and examples provided are very good &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; However, I think you used &amp;lt;br/&amp;gt; to break line between paragraph, while the other examples use &amp;lt;p&amp;gt;. The visual is a bit different.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;After I read the issue and applied the patch (I had a quick view on it before, wow, so many tests &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; I opened Eclipse and looked for the aggregator package, but it&apos;s aggregate. I think functor, generator and adapter package names follow the name of the pattern they implement. And I have seen aggregate and aggregator as the name of the pattern. What do you think?&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;How does an aggregator differs from the reduce function (like in map reduce)? IIUC, aggregators are like the fold function. A &quot;nostore aggregator&quot; is more like a fold with recursion, while the list aggregator is a fold function which stores its partial value somewhere. Maybe we could use FoldLeft with aggregators?&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;In the o.a.c.functor.aggregate.functions package, there are several aggregator functors for Double and Integer. The name of aggregators for Double start with Double. But the name of aggregators for Integer start with Int. In o.a.c.functor.generator.util, there are LongRange and IntegerRange. So I think in this case we could put both as Int, or both as Integer. What do you think?&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;IIUC, in o.a.c.functor.aggregate there are classes for creating nostore and list aggregators. However, if I create a ArrayListBackedAggregator&amp;lt;T&amp;gt;, this aggregator extends AbstractTimedAggregator&amp;lt;T&amp;gt;. What means AbsractTimedAggregator&amp;lt;Integer&amp;gt; aggr = new ArrayListBackedAggregator&amp;lt;Integer&amp;gt;(); would be valid (not tested, but I think it works). I think these classes could be designed in some other way to avoid this scenario... just food for thought &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;AbstractTimedAggregator&amp;lt;T&amp;gt; implements TimedAggregator&amp;lt;T&amp;gt;. But in TimedAggregator#onTimer, the first parameter is an AbstractTimedAggregator. I think this could be replaced by a TimedAggregator. What do you think? Otherwise, it would be like the interface had a dependency to a class that implements it. And if another class implemented TimedAggregator, it would have a dependency to AbstractTimedAggregator too. Or if AbstractTimedAggregator was deprecated/removed, it would cause problems in TimedAggregator interface.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The docs, examples and coverage are great. No issues in PMD, FindBugs or Checkstyle found so far. All licenses in place, as well as package javadoc. Next time I submit a patch I hope it can as neat as yours &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &lt;/p&gt;

&lt;p&gt;There is an issue in Google Guava for similar feature, have you seen it (&lt;a href=&quot;http://code.google.com/p/guava-libraries/issues/detail?id=546)?&quot;&gt;http://code.google.com/p/guava-libraries/issues/detail?id=546)?&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Cheers&lt;br/&gt;
Bruno&lt;/p&gt;</comment>
                    <comment id="13281433" author="liviutudor" created="Wed, 23 May 2012 07:10:20 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Hi Liviu!&lt;/p&gt;

&lt;p&gt;First of all, it&apos;s very clear you have put a lot of effort on this patch. I&apos;ve applied at a local working copy of functor trunk, and it is very neat indeed. I wish my patches were as good as yours &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thank you! To be honest I think the quality of my previous patch was well under average on that &amp;#8211; I am still wondering how Simone had so much patience to actually go through it &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &amp;#8211; so I thought I&apos;d put some serious effort in making it at least readable, so at least if this patch turns out to be a dud people don&apos;t waste too much time on trying to figure it out &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;


&lt;blockquote&gt;
&lt;p&gt;I&apos;m starting to learn about aggregators now, while reading the code and documents that you wrote. So feel free to correct or comment any of my points below.&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;The documentation and examples provided are very good &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; However, I think you used &amp;lt;br/&amp;gt; to break line between paragraph, while the other examples use &amp;lt;p&amp;gt;. The visual is a bit different.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;Very good point! I never picked on that myself &amp;#8211; I&apos;m a sucker for closing and opening tags (e.g. &amp;lt;p&amp;gt; ..... &amp;lt;/p&amp;gt;) so out of sheer laziness I guess I find myself using the &amp;lt;br/&amp;gt; a lot &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; I went through the code and replaced all the &amp;lt;br/&amp;gt; with &amp;lt;p&amp;gt; so it should be all uniform now. (Wouldn&apos;t mind a second pair of eyes to verify that I haven&apos;t missed a &amp;lt;br/&amp;gt; though, if you have the time!)&lt;/p&gt;


&lt;blockquote&gt;
&lt;ul&gt;
	&lt;li&gt;After I read the issue and applied the patch (I had a quick view on it before, wow, so many tests &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; I opened Eclipse and looked for the aggregator package, but it&apos;s aggregate. I think functor, generator and adapter package names follow the name of the pattern they implement. And I have seen aggregate and aggregator as the name of the pattern. What do you think?&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;You have a fair point, again &amp;#8211; the &quot;aggregate&quot; name stems really from the first patch sent which was quite different to what &quot;aggregator&quot; has become in the last patch I&apos;ve submitted. It somehow never crossed my mind after the refactoring(s) to change the package to &quot;aggregator&quot; &amp;#8211; though now that you mentioned it, it makes perfect sense! &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; So I went ahead and moved packages under &quot;aggregator&quot;.&lt;/p&gt;



&lt;blockquote&gt;
&lt;ul&gt;
	&lt;li&gt;How does an aggregator differs from the reduce function (like in map reduce)? IIUC, aggregators are like the fold function. A &quot;nostore aggregator&quot; is more like a fold with recursion, while the list aggregator is a fold function which stores its partial value somewhere. Maybe we could use FoldLeft with aggregators?&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;I think you might be right &amp;#8211; gonna go and have a look at &lt;tt&gt;FoldLeft&lt;/tt&gt; &amp;#8211; haven&apos;t considered that approach to be honest (nor am I that familiar with the class itself &amp;#8211; though I am aware of the whole map/reduce paradigm).&lt;/p&gt;



&lt;blockquote&gt;
&lt;ul&gt;
	&lt;li&gt;In the o.a.c.functor.aggregate.functions package, there are several aggregator functors for Double and Integer. The name of aggregators for Double start with Double. But the name of aggregators for Integer start with Int. In o.a.c.functor.generator.util, there are LongRange and IntegerRange. So I think in this case we could put both as Int, or both as Integer. What do you think?&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;My laziness strikes again &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; I don&apos;t like typing long class names &amp;#8211; even though I&apos;m an Eclipse user and make full usage of all the wonders of autocomplete etc, long class names don&apos;t sit well with me (showing my old age here, see, I used a lot of &quot;dumb&quot; editors in my time when terminals were green and black &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &amp;#8211; hence my choosing Int versus Integer. However, that could be misleading : Integer suggest java.lang.Integer wheres Int in the name could suggest the primitive int.&lt;br/&gt;
Since we already used the convention of Integer for when java.lang.Integer is used in functor, I went and changed all the names to include Integer rather than just Int. Thanks for the heads-up on this!&lt;/p&gt;


&lt;blockquote&gt;
&lt;ul&gt;
	&lt;li&gt;IIUC, in o.a.c.functor.aggregate there are classes for creating nostore and list aggregators. However, if I create a ArrayListBackedAggregator&amp;lt;T&amp;gt;, this aggregator extends AbstractTimedAggregator&amp;lt;T&amp;gt;. What means AbsractTimedAggregator&amp;lt;Integer&amp;gt; aggr = new ArrayListBackedAggregator&amp;lt;Integer&amp;gt;(); would be valid (not tested, but I think it works). I think these classes could be designed in some other way to avoid this scenario... just food for thought &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;Yes, that is the intended behaviour: in other words the implementations provided all are meant to have built-in timer support. I have defined the top-level interface Aggregator with no timer support as there might be other scenarios the Aggregator can be used in, which don&apos;t require timer support (even though that can be achieved with a null timer in AbstractTimedAggregator).&lt;br/&gt;
Basically this package appeared from finding myself quite often writing similar aggregators for various apps or components I was working on &amp;#8211; and every time I needed this data to be flushed into a sink (typically logged in a log file or over a socket) regularly. As I said, this isn&apos;t to say Aggregator &lt;b&gt;must&lt;/b&gt; be used in a timer context &amp;#8211; hence, as I said, the Aggregator interface doesn&apos;t make any reference to that.&lt;br/&gt;
Do you think these interfaces / classes should be structured some other way then? (Or is it perhaps the fact the naming of classes and interfaces is it not the best?)&lt;/p&gt;



&lt;blockquote&gt;
&lt;ul&gt;
	&lt;li&gt;AbstractTimedAggregator&amp;lt;T&amp;gt; implements TimedAggregator&amp;lt;T&amp;gt;. But in TimedAggregator#onTimer, the first parameter is an AbstractTimedAggregator. I think this could be replaced by a TimedAggregator. What do you think? Otherwise, it would be like the interface had a dependency to a class that implements it. And if another class implemented TimedAggregator, it would have a dependency to AbstractTimedAggregator too. Or if AbstractTimedAggregator was deprecated/removed, it would cause problems in TimedAggregator interface.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;There is no interface &lt;tt&gt;TimedAggregator&lt;/tt&gt; &amp;#8211; it&apos;s just &lt;tt&gt;Aggregator&lt;/tt&gt; and &lt;tt&gt;AbstractTimedAggregator&lt;/tt&gt; implements it. The &lt;tt&gt;TimedAggregatorListener&lt;/tt&gt; indeed has a dependency on the &lt;tt&gt;AbstractTimedAggregator&lt;/tt&gt; class which I agree is not the best &amp;#8211; perhaps, a reason for introducing a &lt;tt&gt;TimedAggregator&lt;/tt&gt; interface and work at interface level in &lt;tt&gt;TimedAggregatorListener&lt;/tt&gt;?&lt;br/&gt;
Though at the same time, the only reason why &lt;tt&gt;AbstractTimedAggregator&lt;/tt&gt; is mentioned in &lt;tt&gt;TimedAggregatorListener&lt;/tt&gt; is because the base interface &lt;tt&gt;Aggregator&lt;/tt&gt; has no concept or mention of timer, so while it is possible to have &lt;tt&gt;TimedAggregatorListener&lt;/tt&gt; declare a method like this:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;void onTimer(Aggregator&amp;lt;T&amp;gt; aggregator, T evaluation);&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;It just didn&apos;t make sense to me, since like I said, &lt;tt&gt;Aggregator&lt;/tt&gt; doesn&apos;t have a concept of timer.&lt;br/&gt;
So the more I think about it, I could introduce a &lt;tt&gt;TimedAggregator&lt;/tt&gt; interface which would extend &lt;tt&gt;Aggregator&lt;/tt&gt; and offer 3 other methods:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;addListener&lt;/li&gt;
	&lt;li&gt;removeListener&lt;/li&gt;
	&lt;li&gt;timer&lt;br/&gt;
What do you think? Or should we use &lt;tt&gt;Aggregator&lt;/tt&gt; in &lt;tt&gt;TimedAggregatorListener&lt;/tt&gt;?&lt;/li&gt;
&lt;/ul&gt;




&lt;blockquote&gt;
&lt;p&gt;The docs, examples and coverage are great. No issues in PMD, FindBugs or Checkstyle found so far. All licenses in place, as well as package javadoc. Next time I submit a patch I hope it can as neat as yours &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Thank you!&lt;/p&gt;



&lt;blockquote&gt;
&lt;p&gt;There is an issue in Google Guava for similar feature, have you seen it (&lt;a href=&quot;http://code.google.com/p/guava-libraries/issues/detail?id=546)?&quot;&gt;http://code.google.com/p/guava-libraries/issues/detail?id=546)?&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I wasn&apos;t aware of it to be honest. I&apos;ll try to have a look at it but to be honest, I fear timing is not my most abundant resource and I&apos;d rather spend most of the time coding functor &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; I&apos;ll have a look though, just to see what they came up with.&lt;/p&gt;


&lt;p&gt;I&apos;m attaching an update to the patch (labelled &lt;tt&gt;functor.22-may-2012.patch.bz2&lt;/tt&gt;) with the above changes &amp;#8211; would appreciate your comments on this!&lt;/p&gt;</comment>
                    <comment id="13281434" author="liviutudor" created="Wed, 23 May 2012 07:10:50 +0000"  >&lt;p&gt;Patch for my reply to Bruno&lt;/p&gt;</comment>
                    <comment id="13286636" author="simone.tripodi" created="Thu, 31 May 2012 15:00:26 +0000"  >&lt;p&gt;Patch (finally) applied, see r1344757 &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Thanks &lt;b&gt;a lot&lt;/b&gt; Liviu for the large codebase, and thanks also Bruno for reviewing and providing help!!!&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12492156" name="commons-functor-aggregate+summarizer.zip" size="5421" author="liviutudor" created="Mon, 29 Aug 2011 22:53:15 +0000" />
                    <attachment id="12493524" name="commons-functor.patch.bz2" size="14649" author="liviutudor" created="Wed, 7 Sep 2011 23:05:19 +0000" />
                    <attachment id="12528708" name="functor.22-may-2012.patch.bz2" size="23076" author="liviutudor" created="Wed, 23 May 2012 07:10:50 +0000" />
                    <attachment id="12516078" name="functor.patch.bz2" size="23037" author="liviutudor" created="Sun, 26 Feb 2012 03:43:54 +0000" />
                    <attachment id="12515337" name="functor.patch.bz2" size="18837" author="liviutudor" created="Tue, 21 Feb 2012 09:06:47 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>5.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Wed, 31 Aug 2011 15:16:22 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>